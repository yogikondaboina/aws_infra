name: Terraform Apply

on:
  workflow_run:
    workflows: ["Terraform Plan"]  # Must match EXACTLY the name in plan.yml
    types: 
      - completed
    branches:
      - main
      - dev
      - qa

permissions:
  id-token: write
  contents: read

env:
  TF_CLI_ARGS: "-no-color"
  TF_IN_AUTOMATION: true
  AWS_REGION: us-east-1

jobs:
  terraform-apply:
    # Only run if the Plan workflow was successful AND it was triggered by push (not PR)
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'push'
    name: Terraform Apply
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: .

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Workflow Run Artifact
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }},
            });
            const matchArtifact = artifacts.data.artifacts.find((artifact) => {
              return artifact.name == "terraform-plan"
            });
            if (matchArtifact) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: matchArtifact.id,
                archive_format: 'zip',
              });
            } else {
              throw new Error('Artifact not found');
            }

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::596122389379:role/github-action-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply
        run: |
          echo "Applying Terraform Plan..."
          terraform apply -auto-approve -input=false tfplan

      - name: Upload Terraform State to S3
        if: github.event.workflow_run.head_branch == 'main'
        run: |
          echo "Uploading Terraform state file to S3..."
          aws s3 cp ./terraform.tfstate s3://host-1q/terraform.tfstate